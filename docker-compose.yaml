version: "3.9"
services:
    api:
        build: .
        restart: always
        ports:
            - "9090:9090"
            - "7000:7000"
        depends_on:
            kafka:
#                condition: service_started
                condition: service_healthy
            mysql:
                condition: service_started
        
        environment:
            DATABASE_URL: "root:@tcp(mysql:3306)/test"
            KAFKA_PRODUCER_BOOTSTRAP_SERVERS: "kafka:9092"
    
    mysql:
        image: mysql:5.7
        volumes:
            - "db_data:/var/lib/mysql"
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ""
            MYSQL_DATABASE: test
            MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    
    zookeeper:
        image: docker.io/bitnami/zookeeper:latest
        ports:
            - "2181:2181"
        volumes:
            - "zookeeper_data:/bitnami"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
            - ZOOKEEPER_TICK_TIME=2000
    kafka:
        image: docker.io/bitnami/kafka:latest
        ports:
            - "9092:9092"
        volumes:
            - "kafka_data:/bitnami"
        environment:
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        depends_on:
            - zookeeper
        healthcheck:
            test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
            interval: 30s
            timeout: 5s
            retries: 20
#        command: "bash -c ./opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic company"
        

volumes:
    zookeeper_data:
        driver: local
    kafka_data:
        driver: local
    db_data:
        driver: local
