// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wgarunap/xm-rest-api/domain (interfaces: IpClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIpClient is a mock of IpClient interface
type MockIpClient struct {
	ctrl     *gomock.Controller
	recorder *MockIpClientMockRecorder
}

// MockIpClientMockRecorder is the mock recorder for MockIpClient
type MockIpClientMockRecorder struct {
	mock *MockIpClient
}

// NewMockIpClient creates a new mock instance
func NewMockIpClient(ctrl *gomock.Controller) *MockIpClient {
	mock := &MockIpClient{ctrl: ctrl}
	mock.recorder = &MockIpClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIpClient) EXPECT() *MockIpClientMockRecorder {
	return m.recorder
}

// GetCountry mocks base method
func (m *MockIpClient) GetCountry(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCountry", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCountry indicates an expected call of GetCountry
func (mr *MockIpClientMockRecorder) GetCountry(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCountry", reflect.TypeOf((*MockIpClient)(nil).GetCountry), arg0)
}
